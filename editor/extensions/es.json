{
    "arduinoEsp32.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoEsp32.InterrupModeMenu.high": "nivel alto",
    "arduinoEsp32.InterrupModeMenu.low": "nivel bajo",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoEsp32.category.data": "Datos",
    "arduinoEsp32.category.pins": "Pines",
    "arduinoEsp32.category.serial": "Serial",
    "arduinoEsp32.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoEsp32.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoEsp32.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "decimal",
    "arduinoEsp32.dataTypeMenu.integer": "entero",
    "arduinoEsp32.dataTypeMenu.string": "cadena",
    "arduinoEsp32.eolMenu.noWarp": "sin-salto",
    "arduinoEsp32.eolMenu.warp": "salto",
    "arduinoEsp32.levelMenu.high": "alto",
    "arduinoEsp32.levelMenu.low": "bajo",
    "arduinoEsp32.modeMenu.input": "entrada",
    "arduinoEsp32.modeMenu.inputPulldown": "entrada-pull-down",
    "arduinoEsp32.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoEsp32.modeMenu.output": "salida",
    "arduinoEsp32.pins.esp32AttachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoEsp32.pins.esp32DetachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "leer pin táctil [PIN]",
    "arduinoEsp32.pins.esp32SetDACOutput": "configurar pin DAC [PIN] salida [OUT]",
    "arduinoEsp32.pins.esp32SetPwmOutput": "configurar pin PWM [PIN] usar canal [CH] salida [OUT]",
    "arduinoEsp32.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoEsp32.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoEsp32.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoEsp32.pins.setServoOutput": "configurar pin servo [PIN] usar canal [CH] salida [OUT]",
    "arduinoEsp32.serial.multiSerialAvailable": "serial [NO] longitud de datos disponibles",
    "arduinoEsp32.serial.multiSerialBegin": "serial [NO] iniciar baudrate [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "serial [NO] leer un byte",
    "arduinoEsp8266.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoEsp8266.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoEsp8266.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoEsp8266.category.data": "Datos",
    "arduinoEsp8266.category.pins": "Pines",
    "arduinoEsp8266.category.serial": "Serial",
    "arduinoEsp8266.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoEsp8266.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoEsp8266.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoEsp8266.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoEsp8266.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoEsp8266.dataTypeMenu.decimal": "decimal",
    "arduinoEsp8266.dataTypeMenu.integer": "entero",
    "arduinoEsp8266.dataTypeMenu.string": "cadena",
    "arduinoEsp8266.eolMenu.noWarp": "sin-salto",
    "arduinoEsp8266.eolMenu.warp": "salto",
    "arduinoEsp8266.levelMenu.high": "alto",
    "arduinoEsp8266.levelMenu.low": "bajo",
    "arduinoEsp8266.modeMenu.input": "entrada",
    "arduinoEsp8266.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoEsp8266.modeMenu.output": "salida",
    "arduinoEsp8266.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoEsp8266.pins.esp8266AttachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoEsp8266.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoEsp8266.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoEsp8266.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoEsp8266.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoEsp8266.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoEsp8266.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoEsp8266.serial.serialAvailable": "serial longitud de datos disponibles",
    "arduinoEsp8266.serial.serialBegin": "serial iniciar baudrate [VALUE]",
    "arduinoEsp8266.serial.serialPrint": "serial imprimir [VALUE] [EOL]",
    "arduinoEsp8266.serial.serialReadAByte": "serial leer un byte",
    "arduinoK210.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoK210.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoK210.InterrupModeMenu.high": "nivel alto",
    "arduinoK210.InterrupModeMenu.low": "nivel bajo",
    "arduinoK210.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoK210.category.data": "Datos",
    "arduinoK210.category.pins": "Pines",
    "arduinoK210.category.serial": "Serial",
    "arduinoK210.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoK210.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoK210.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoK210.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoK210.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoK210.dataTypeMenu.decimal": "decimal",
    "arduinoK210.dataTypeMenu.integer": "entero",
    "arduinoK210.dataTypeMenu.string": "cadena",
    "arduinoK210.eolMenu.noWarp": "sin-salto",
    "arduinoK210.eolMenu.warp": "salto",
    "arduinoK210.levelMenu.high": "alto",
    "arduinoK210.levelMenu.low": "bajo",
    "arduinoK210.modeMenu.input": "entrada",
    "arduinoK210.modeMenu.inputPulldown": "entrada-pull-down",
    "arduinoK210.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoK210.modeMenu.output": "salida",
    "arduinoK210.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoK210.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoK210.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoK210.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoK210.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoK210.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoK210.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoK210.serial.multiSerialAvailable": "serial [NO] longitud de datos disponibles",
    "arduinoK210.serial.multiSerialBegin": "serial [NO] iniciar baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "arduinoK210.serial.multiSerialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "arduinoK210.serial.multiSerialReadAByte": "serial [NO] leer un byte",
    "arduinoLeonardo.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoLeonardo.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoLeonardo.InterrupModeMenu.low": "bajo",
    "arduinoLeonardo.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoLeonardo.category.data": "Datos",
    "arduinoLeonardo.category.pins": "Pines",
    "arduinoLeonardo.category.serial": "Serial",
    "arduinoLeonardo.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoLeonardo.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoLeonardo.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "decimal",
    "arduinoLeonardo.dataTypeMenu.integer": "entero",
    "arduinoLeonardo.dataTypeMenu.string": "cadena",
    "arduinoLeonardo.eolMenu.noWarp": "sin-salto",
    "arduinoLeonardo.eolMenu.warp": "salto",
    "arduinoLeonardo.levelMenu.high": "alto",
    "arduinoLeonardo.levelMenu.low": "bajo",
    "arduinoLeonardo.modeMenu.input": "entrada",
    "arduinoLeonardo.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoLeonardo.modeMenu.output": "salida",
    "arduinoLeonardo.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoLeonardo.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoLeonardo.serial.serialAvailable": "serial longitud de datos disponibles",
    "arduinoLeonardo.serial.serialBegin": "serial iniciar baudrate [VALUE]",
    "arduinoLeonardo.serial.serialPrint": "serial imprimir [VALUE] [EOL]",
    "arduinoLeonardo.serial.serialReadAByte": "serial leer un byte",
    "arduinoMega2560.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoMega2560.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoMega2560.InterrupModeMenu.low": "bajo",
    "arduinoMega2560.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoMega2560.category.data": "Datos",
    "arduinoMega2560.category.pins": "Pines",
    "arduinoMega2560.category.serial": "Serial",
    "arduinoMega2560.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoMega2560.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoMega2560.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "decimal",
    "arduinoMega2560.dataTypeMenu.integer": "entero",
    "arduinoMega2560.dataTypeMenu.string": "cadena",
    "arduinoMega2560.eolMenu.noWarp": "sin-salto",
    "arduinoMega2560.eolMenu.warp": "salto",
    "arduinoMega2560.levelMenu.high": "alto",
    "arduinoMega2560.levelMenu.low": "bajo",
    "arduinoMega2560.modeMenu.input": "entrada",
    "arduinoMega2560.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoMega2560.modeMenu.output": "salida",
    "arduinoMega2560.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoMega2560.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoMega2560.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "serial [NO] longitud de datos disponibles",
    "arduinoMega2560.serial.multiSerialBegin": "serial [NO] iniciar baudrate [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "serial [NO] leer un byte",
    "arduinoPeripheral.connection.connectFirmataTimeout": "Tiempo de espera al intentar conectar firmata, por favor descarga el firmware primero",
    "arduinoRaspberryPiPico.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoRaspberryPiPico.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoRaspberryPiPico.InterrupModeMenu.high": "nivel alto",
    "arduinoRaspberryPiPico.InterrupModeMenu.low": "nivel bajo",
    "arduinoRaspberryPiPico.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoRaspberryPiPico.category.data": "Datos",
    "arduinoRaspberryPiPico.category.pins": "Pines",
    "arduinoRaspberryPiPico.category.serial": "Serial",
    "arduinoRaspberryPiPico.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoRaspberryPiPico.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoRaspberryPiPico.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoRaspberryPiPico.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoRaspberryPiPico.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoRaspberryPiPico.dataTypeMenu.decimal": "decimal",
    "arduinoRaspberryPiPico.dataTypeMenu.integer": "entero",
    "arduinoRaspberryPiPico.dataTypeMenu.string": "cadena",
    "arduinoRaspberryPiPico.eolMenu.noWarp": "sin-salto",
    "arduinoRaspberryPiPico.eolMenu.warp": "salto",
    "arduinoRaspberryPiPico.levelMenu.high": "alto",
    "arduinoRaspberryPiPico.levelMenu.low": "bajo",
    "arduinoRaspberryPiPico.modeMenu.input": "entrada",
    "arduinoRaspberryPiPico.modeMenu.inputPulldown": "entrada-pull-down",
    "arduinoRaspberryPiPico.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoRaspberryPiPico.modeMenu.output": "salida",
    "arduinoRaspberryPiPico.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoRaspberryPiPico.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoRaspberryPiPico.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoRaspberryPiPico.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoRaspberryPiPico.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoRaspberryPiPico.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoRaspberryPiPico.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoRaspberryPiPico.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoRaspberryPiPico.serial.multiSerialAvailable": "serial [NO] longitud de datos disponibles",
    "arduinoRaspberryPiPico.serial.multiSerialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "arduinoRaspberryPiPico.serial.multiSerialReadAByte": "serial [NO] leer un byte",
    "arduinoRaspberryPiPico.serial.raspberryPiPicoMultiSerialBegin": "serial [NO] iniciar baudrate [VALUE]",
    "arduinoUno.InterrupModeMenu.changeEdge": "cambiar borde",
    "arduinoUno.InterrupModeMenu.fallingEdge": "borde descendente",
    "arduinoUno.InterrupModeMenu.low": "bajo",
    "arduinoUno.InterrupModeMenu.risingEdge": "borde ascendente",
    "arduinoUno.category.data": "Datos",
    "arduinoUno.category.pins": "Pines",
    "arduinoUno.category.serial": "Serial",
    "arduinoUno.data.dataConstrain": "limitar [DATA] entre ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "convertir [DATA] a [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "convertir [DATA] a carácter ASCII",
    "arduinoUno.data.dataConvertASCIINumber": "convertir [DATA] a número ASCII",
    "arduinoUno.data.dataMap": "mapear [DATA] de ([ARG0], [ARG1]) a ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "decimal",
    "arduinoUno.dataTypeMenu.integer": "entero",
    "arduinoUno.dataTypeMenu.string": "cadena",
    "arduinoUno.eolMenu.noWarp": "sin-salto",
    "arduinoUno.eolMenu.warp": "salto",
    "arduinoUno.levelMenu.high": "alto",
    "arduinoUno.levelMenu.low": "bajo",
    "arduinoUno.modeMenu.input": "entrada",
    "arduinoUno.modeMenu.inputPullup": "entrada-pull-up",
    "arduinoUno.modeMenu.output": "salida",
    "arduinoUno.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "arduinoUno.pins.detachInterrupt": "desconectar interrupción pin [PIN]",
    "arduinoUno.pins.readAnalogPin": "leer pin analógico [PIN]",
    "arduinoUno.pins.readDigitalPin": "leer pin digital [PIN]",
    "arduinoUno.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "arduinoUno.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "arduinoUno.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "arduinoUno.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "arduinoUno.serial.serialAvailable": "serial longitud de datos disponibles",
    "arduinoUno.serial.serialBegin": "serial iniciar baudrate [VALUE]",
    "arduinoUno.serial.serialPrint": "serial imprimir [VALUE] [EOL]",
    "arduinoUno.serial.serialReadAByte": "serial leer un byte",
    "boost.color.any": "cualquier color",
    "boost.color.black": "negro",
    "boost.color.blue": "azul",
    "boost.color.green": "verde",
    "boost.color.red": "rojo",
    "boost.color.white": "blanco",
    "boost.color.yellow": "amarillo",
    "boost.getMotorPosition": "posición del motor [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "ángulo de inclinación [TILT_DIRECTION]",
    "boost.motorDirection.backward": "ese camino",
    "boost.motorDirection.forward": "este camino",
    "boost.motorDirection.reverse": "reversa",
    "boost.motorOff": "apagar motor [MOTOR_ID]",
    "boost.motorOn": "encender motor [MOTOR_ID]",
    "boost.motorOnFor": "encender motor [MOTOR_ID] por [DURATION] segundos",
    "boost.motorOnForRotation": "encender motor [MOTOR_ID] por [ROTATION] rotaciones",
    "boost.seeingColor": "viendo ladrillo [COLOR]?",
    "boost.setLightHue": "configurar color de la luz a [HUE]",
    "boost.setMotorDirection": "configurar dirección del motor [MOTOR_ID] a [MOTOR_DIRECTION]",
    "boost.setMotorPower": "configurar velocidad del motor [MOTOR_ID] a [POWER] %",
    "boost.tiltDirection.any": "cualquiera",
    "boost.tiltDirection.down": "abajo",
    "boost.tiltDirection.left": "izquierda",
    "boost.tiltDirection.right": "derecha",
    "boost.tiltDirection.up": "arriba",
    "boost.whenColor": "cuando se vea ladrillo [COLOR]",
    "boost.whenTilted": "cuando se incline [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "notar bip [NOTE] por [TIME] segs",
    "ev3.buttonPressed": "¿botón [PORT] presionado?",
    "ev3.getBrightness": "brillo",
    "ev3.getDistance": "distancia",
    "ev3.getMotorPosition": "posición del motor [PORT]",
    "ev3.motorSetPower": "motor [PORT] configurar potencia [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] gira de esta forma por [TIME] segundos",
    "ev3.motorTurnCounterClockwise": "motor [PORT] gira de esa forma por [TIME] segundos",
    "ev3.whenBrightnessLessThan": "cuando brillo < [DISTANCE]",
    "ev3.whenButtonPressed": "cuando el botón [PORT] sea presionado",
    "ev3.whenDistanceLessThan": "cuando distancia < [DISTANCE]",
    "gdxfor.getAcceleration": "aceleración [DIRECTION]",
    "gdxfor.getForce": "fuerza",
    "gdxfor.getSpin": "velocidad de giro [DIRECTION]",
    "gdxfor.getTilt": "ángulo de inclinación [TILT]",
    "gdxfor.isFreeFalling": "¿cayendo?",
    "gdxfor.isTilted": "¿inclinación [TILT]?",
    "gdxfor.pulled": "tirado",
    "gdxfor.pushed": "empujado",
    "gdxfor.shaken": "sacudido",
    "gdxfor.startedFalling": "empezó a caer",
    "gdxfor.tiltDirectionMenu.any": "cualquiera",
    "gdxfor.tiltDirectionMenu.back": "atrás",
    "gdxfor.tiltDirectionMenu.front": "delante",
    "gdxfor.tiltDirectionMenu.left": "izquierda",
    "gdxfor.tiltDirectionMenu.right": "derecha",
    "gdxfor.turnedFaceDown": "volteado hacia abajo",
    "gdxfor.turnedFaceUp": "volteado hacia arriba",
    "gdxfor.whenForcePushedOrPulled": "cuando sensor de fuerza [PUSH_PULL]",
    "gdxfor.whenGesture": "cuando [GESTURE]",
    "gdxfor.whenTilted": "cuando inclinado [TILT]",
    "makeymakey.downArrow": "flecha abajo",
    "makeymakey.downArrowShort": "abajo",
    "makeymakey.leftArrow": "flecha izquierda",
    "makeymakey.leftArrowShort": "izquierda",
    "makeymakey.rightArrow": "flecha derecha",
    "makeymakey.rightArrowShort": "derecha",
    "makeymakey.spaceKey": "espacio",
    "makeymakey.upArrow": "flecha arriba",
    "makeymakey.upArrowShort": "arriba",
    "makeymakey.whenKeyPressed": "cuando la tecla [KEY] sea presionada",
    "makeymakey.whenKeysPressedInOrder": "cuando [SEQUENCE] sea presionado en orden",
    "microPythonEsp32.InterrupModeMenu.changeEdge": "cambiar borde",
    "microPythonEsp32.InterrupModeMenu.fallingEdge": "borde descendente",
    "microPythonEsp32.InterrupModeMenu.high": "nivel alto",
    "microPythonEsp32.InterrupModeMenu.low": "nivel bajo",
    "microPythonEsp32.InterrupModeMenu.risingEdge": "borde ascendente",
    "microPythonEsp32.category.console": "Consola",
    "microPythonEsp32.category.pins": "Pines",
    "microPythonEsp32.console.consoleInput": "pedir [TEXT] y leer entrada",
    "microPythonEsp32.console.consolePrint": "imprimir [TEXT] [EOL]",
    "microPythonEsp32.eolMenu.noWarp": "sin-salto",
    "microPythonEsp32.eolMenu.warp": "salto",
    "microPythonEsp32.levelMenu.high": "alto",
    "microPythonEsp32.levelMenu.low": "bajo",
    "microPythonEsp32.modeMenu.input": "entrada",
    "microPythonEsp32.modeMenu.inputPulldown": "entrada-pull-down",
    "microPythonEsp32.modeMenu.inputPullup": "entrada-pull-up",
    "microPythonEsp32.modeMenu.output": "salida",
    "microPythonEsp32.pins.esp32AttachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "microPythonEsp32.pins.esp32ReadAnalogPin": "leer pin analógico [PIN]",
    "microPythonEsp32.pins.esp32ReadDigitalPin": "leer pin digital [PIN]",
    "microPythonEsp32.pins.esp32ReadTouchPin": "leer pin táctil [PIN]",
    "microPythonEsp32.pins.esp32SetDACOutput": "configurar pin DAC [PIN] salida [OUT]",
    "microPythonEsp32.pins.esp32SetDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "microPythonEsp32.pins.esp32SetPinMode": "configurar pin [PIN] modo [MODE]",
    "microPythonEsp32.pins.esp32SetPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "microPythonEsp32.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "microPythonEsp8266.category.console": "Consola",
    "microPythonEsp8266.category.pins": "Pines",
    "microPythonEsp8266.console.consoleInput": "pedir [TEXT] y leer entrada",
    "microPythonEsp8266.console.consolePrint": "imprimir [TEXT] [EOL]",
    "microPythonEsp8266.eolMenu.noWarp": "sin-salto",
    "microPythonEsp8266.eolMenu.warp": "salto",
    "microPythonEsp8266.levelMenu.high": "alto",
    "microPythonEsp8266.levelMenu.low": "bajo",
    "microPythonEsp8266.modeMenu.input": "entrada",
    "microPythonEsp8266.modeMenu.inputPullup": "entrada-pull-up",
    "microPythonEsp8266.modeMenu.output": "salida",
    "microPythonEsp8266.pins.esp8266AttachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "microPythonEsp8266.pins.readAnalogPin": "leer pin analógico [PIN]",
    "microPythonEsp8266.pins.readDigitalPin": "leer pin digital [PIN]",
    "microPythonEsp8266.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "microPythonEsp8266.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "microPythonEsp8266.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "microPythonEsp8266.pins.setServoOutput": "configurar pin servo [PIN] salida [OUT]",
    "microPythonK210.InterrupModeMenu.changeEdge": "cambiar borde",
    "microPythonK210.InterrupModeMenu.fallingEdge": "borde descendente",
    "microPythonK210.InterrupModeMenu.risingEdge": "borde ascendente",
    "microPythonK210.category.console": "Consola",
    "microPythonK210.category.pins": "Pines",
    "microPythonK210.category.serial": "Serial",
    "microPythonK210.console.consoleInput": "pedir [TEXT] y leer entrada",
    "microPythonK210.console.consolePrint": "imprimir [TEXT] [EOL]",
    "microPythonK210.eolMenu.noWarp": "sin-salto",
    "microPythonK210.eolMenu.warp": "salto",
    "microPythonK210.levelMenu.high": "alto",
    "microPythonK210.levelMenu.low": "bajo",
    "microPythonK210.modeMenu.input": "entrada",
    "microPythonK210.modeMenu.inputPulldown": "entrada-pull-down",
    "microPythonK210.modeMenu.inputPullup": "entrada-pull-up",
    "microPythonK210.modeMenu.output": "salida",
    "microPythonK210.pins.k210AttachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "microPythonK210.pins.k210SetPinMode": "configurar pin [PIN] modo [MODE]",
    "microPythonK210.pins.k210SetPwmOutput": "configurar pin PWM [PIN] usar canal [CH] salida [OUT]",
    "microPythonK210.pins.k210SetServoOutput": "configurar pin servo [PIN] usar canal [CH] salida [OUT]",
    "microPythonK210.pins.readDigitalPin": "leer pin digital [PIN]",
    "microPythonK210.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "microPythonK210.serial.k210SerialBegin": "serial [NO] iniciar baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "microPythonK210.serial.serialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "microPythonK210.serial.serialReadALine": "serial [NO] leer una línea",
    "microPythonRaspberryPiPico.InterrupModeMenu.changeEdge": "cambiar borde",
    "microPythonRaspberryPiPico.InterrupModeMenu.fallingEdge": "borde descendente",
    "microPythonRaspberryPiPico.InterrupModeMenu.risingEdge": "borde ascendente",
    "microPythonRaspberryPiPico.category.console": "Consola",
    "microPythonRaspberryPiPico.category.pins": "Pines",
    "microPythonRaspberryPiPico.category.serial": "Serial",
    "microPythonRaspberryPiPico.console.consoleInput": "pedir [TEXT] y leer entrada",
    "microPythonRaspberryPiPico.console.consolePrint": "imprimir [TEXT] [EOL]",
    "microPythonRaspberryPiPico.eolMenu.noWarp": "sin-salto",
    "microPythonRaspberryPiPico.eolMenu.warp": "salto",
    "microPythonRaspberryPiPico.levelMenu.high": "alto",
    "microPythonRaspberryPiPico.levelMenu.low": "bajo",
    "microPythonRaspberryPiPico.modeMenu.input": "entrada",
    "microPythonRaspberryPiPico.modeMenu.inputPulldown": "entrada-pull-down",
    "microPythonRaspberryPiPico.modeMenu.inputPullup": "entrada-pull-up",
    "microPythonRaspberryPiPico.modeMenu.output": "salida",
    "microPythonRaspberryPiPico.pins.attachInterrupt": "adjuntar interrupción pin [PIN] modo [MODE] ejecuta",
    "microPythonRaspberryPiPico.pins.readAnalogPin": "leer pin analógico [PIN]",
    "microPythonRaspberryPiPico.pins.readDigitalPin": "leer pin digital [PIN]",
    "microPythonRaspberryPiPico.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "microPythonRaspberryPiPico.pins.setPinMode": "configurar pin [PIN] modo [MODE]",
    "microPythonRaspberryPiPico.pins.setPwmOutputU16": "configurar pin PWM [PIN] salida [OUT]",
    "microPythonRaspberryPiPico.pins.setServoOutputU16": "configurar pin servo [PIN] salida [OUT]",
    "microPythonRaspberryPiPico.serial.multiSerialPrint": "serial [NO] imprimir [VALUE] [EOL]",
    "microPythonRaspberryPiPico.serial.multiSerialReadALine": "serial [NO] leer una línea",
    "microPythonRaspberryPiPico.serial.raspberryPiPicoSerialBegin": "serial [NO] iniciar baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "microbit.axisMenu.xAxis": "eje x",
    "microbit.axisMenu.yAxis": "eje y",
    "microbit.axisMenu.zAxis": "eje z",
    "microbit.buttonsMenu.any": "cualquiera",
    "microbit.category.console": "Consola",
    "microbit.category.display": "Pantalla",
    "microbit.category.pins": "Pines",
    "microbit.category.sensor": "Sensor",
    "microbit.category.wireless": "Inalámbrico",
    "microbit.clearDisplay": "limpiar pantalla",
    "microbit.console.consolePrint": "imprimir [TEXT]",
    "microbit.defaultTextToDisplay": "¡Hola!",
    "microbit.display.clearDisplay": "limpiar pantalla",
    "microbit.display.lightPixelAt": "encender [STATE] en el eje x: [X], eje y: [Y]",
    "microbit.display.show": "mostrar [TEXT]",
    "microbit.display.showImage": "mostrar imagen [VALUE]",
    "microbit.display.showImageUntil": "mostrar imagen [VALUE] durante [TIME] segundos",
    "microbit.display.showOnPiexlbrightness": "mostrar en el eje x: [X], eje y: [Y] con brillo [BRT]",
    "microbit.display.showUntilScrollDone": "mostrar [TEXT] hasta que termine de desplazarse",
    "microbit.displaySymbol": "mostrar [MATRIX]",
    "microbit.displayText": "mostrar texto [TEXT]",
    "microbit.gestruesMenu.faceDown": "cara abajo",
    "microbit.gestruesMenu.faceUp": "cara arriba",
    "microbit.gestruesMenu.freefall": "caída libre",
    "microbit.gestruesMenu.shaken": "sacudido",
    "microbit.gestruesMenu.tiltedDownward": "inclinado hacia abajo",
    "microbit.gestruesMenu.tiltedLeftward": "inclinado hacia la izquierda",
    "microbit.gestruesMenu.tiltedRightward": "inclinado hacia la derecha",
    "microbit.gestruesMenu.tiltedUpward": "inclinado hacia arriba",
    "microbit.gesturesMenu.jumped": "saltó",
    "microbit.gesturesMenu.moved": "movido",
    "microbit.gesturesMenu.shaken": "sacudido",
    "microbit.isButtonPressed": "¿botón [BTN] presionado?",
    "microbit.isTilted": "¿inclinado [DIRECTION]?",
    "microbit.ledState.off": "apagado",
    "microbit.ledState.on": "encendido",
    "microbit.levelMenu.high": "alto",
    "microbit.levelMenu.low": "bajo",
    "microbit.pinStateMenu.off": "apagado",
    "microbit.pinStateMenu.on": "encendido",
    "microbit.pins.pinIsTouched": "pin [PIN] está tocado",
    "microbit.pins.readAnalogPin": "leer pin analógico [PIN]",
    "microbit.pins.readDigitalPin": "leer pin digital [PIN]",
    "microbit.pins.setDigitalOutput": "configurar pin digital [PIN] salida [LEVEL]",
    "microbit.pins.setPwmOutput": "configurar pin PWM [PIN] salida [OUT]",
    "microbit.sensor.axisAcceleration": "aceleración del eje [AXIS]",
    "microbit.sensor.buttonIsPressed": "¿botón [KEY] presionado?",
    "microbit.sensor.calibrateCompass": "calibrar brújula",
    "microbit.sensor.compassAngle": "ángulo de la brújula",
    "microbit.sensor.compassMagneticDensity": "densidad magnética de la brújula",
    "microbit.sensor.gestureIsX": "¿el gesto es [STA]?",
    "microbit.sensor.lightLevel": "nivel de luz",
    "microbit.sensor.runningTime": "tiempo de ejecución",
    "microbit.sensor.temperature": "temperatura",
    "microbit.tiltAngle": "ángulo de inclinación [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "cualquiera",
    "microbit.tiltDirectionMenu.back": "atrás",
    "microbit.tiltDirectionMenu.front": "frente",
    "microbit.tiltDirectionMenu.left": "izquierda",
    "microbit.tiltDirectionMenu.right": "derecha",
    "microbit.whenButtonPressed": "cuando el botón [BTN] sea presionado",
    "microbit.whenGesture": "cuando el gesto sea [GESTURE]",
    "microbit.whenPinConnected": "cuando el pin [PIN] esté conectado",
    "microbit.whenTilted": "cuando se incline [DIRECTION]",
    "microbit.wireless.closeWirelessCommunication": "cerrar comunicación inalámbrica",
    "microbit.wireless.openWirelessCommunication": "abrir comunicación inalámbrica",
    "microbit.wireless.receiveWirelessMessage": "recibir mensaje inalámbrico",
    "microbit.wireless.resetWirelessCommunication": "reiniciar comunicación inalámbrica",
    "microbit.wireless.sendWirelessMessage": "enviar mensaje inalámbrico [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "configurar canal de comunicación inalámbrica a [CH]",
    "music.categoryName": "Música",
    "music.changeTempo": "cambiar el tempo en [TEMPO]",
    "music.drumBass": "(2) Bombo",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Hi-Hat Cerrado",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cencerro",
    "music.drumCrashCymbal": "(4) Platillo Crash",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Güiro",
    "music.drumHandClap": "(8) Aplauso",
    "music.drumOpenHiHat": "(5) Hi-Hat Abierto",
    "music.drumSideStick": "(3) Golpe de Lado",
    "music.drumSnare": "(1) Caja",
    "music.drumTambourine": "(7) Pandereta",
    "music.drumTriangle": "(12) Triángulo",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Bloque de Madera",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bajo",
    "music.instrumentBassoon": "(14) Fagot",
    "music.instrumentCello": "(8) Violonchelo",
    "music.instrumentChoir": "(15) Coro",
    "music.instrumentClarinet": "(10) Clarinete",
    "music.instrumentElectricGuitar": "(5) Guitarra Eléctrica",
    "music.instrumentElectricPiano": "(2) Piano Eléctrico",
    "music.instrumentFlute": "(12) Flauta",
    "music.instrumentGuitar": "(4) Guitarra",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Caja de Música",
    "music.instrumentOrgan": "(3) Órgano",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxofón",
    "music.instrumentSteelDrum": "(18) Tambor de Acero",
    "music.instrumentSynthLead": "(20) Sintetizador Lead",
    "music.instrumentSynthPad": "(21) Sintetizador Pad",
    "music.instrumentTrombone": "(9) Trombón",
    "music.instrumentVibraphone": "(16) Vibráfono",
    "music.instrumentWoodenFlute": "(13) Flauta de Madera",
    "music.midiPlayDrumForBeats": "tocar tambor [DRUM] durante [BEATS] compases",
    "music.midiSetInstrument": "configurar instrumento a [INSTRUMENT]",
    "music.playDrumForBeats": "tocar tambor [DRUM] durante [BEATS] compases",
    "music.playNoteForBeats": "tocar nota [NOTE] durante [BEATS] compases",
    "music.restForBeats": "descansar durante [BEATS] compases",
    "music.setInstrument": "configurar instrumento a [INSTRUMENT]",
    "music.setTempo": "configurar tempo a [TEMPO]",
    "pen.categoryName": "Lápiz",
    "pen.changeColorParam": "cambiar [COLOR_PARAM] del lápiz en [VALUE]",
    "pen.changeHue": "cambiar el color del lápiz en [HUE]",
    "pen.changeShade": "cambiar sombra del lápiz en [SHADE]",
    "pen.changeSize": "cambiar tamaño del lápiz en [SIZE]",
    "pen.clear": "borrar todo",
    "pen.colorMenu.brightness": "brillo",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturación",
    "pen.colorMenu.transparency": "transparencia",
    "pen.penDown": "bajar lápiz",
    "pen.penUp": "levantar lápiz",
    "pen.setColor": "configurar color del lápiz a [COLOR]",
    "pen.setColorParam": "configurar [COLOR_PARAM] del lápiz a [VALUE]",
    "pen.setHue": "configurar color del lápiz a [HUE]",
    "pen.setShade": "configurar sombra del lápiz a [SHADE]",
    "pen.setSize": "configurar tamaño del lápiz a [SIZE]",
    "pen.stamp": "sello",
    "speech.defaultWhenIHearValue": "vamos",
    "speech.extensionName": "Voz a Texto",
    "speech.listenAndWait": "escuchar y esperar",
    "speech.speechReporter": "voz",
    "speech.whenIHear": "cuando escuche [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Texto a Voz",
    "text2speech.defaultTextToSpeak": "hola",
    "text2speech.giant": "gigante",
    "text2speech.kitten": "gatito",
    "text2speech.setLanguageBlock": "configurar idioma a [LANGUAGE]",
    "text2speech.setVoiceBlock": "configurar voz a [VOICE]",
    "text2speech.speakAndWaitBlock": "decir [WORDS]",
    "text2speech.squeak": "chillido",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Traducir",
    "translate.defaultTextToTranslate": "hola",
    "translate.translateBlock": "traducir [WORDS] a [LANGUAGE]",
    "translate.viewerLanguage": "idioma",
    "videoSensing.categoryName": "Sensado de Video",
    "videoSensing.direction": "dirección",
    "videoSensing.motion": "movimiento",
    "videoSensing.off": "apagar",
    "videoSensing.on": "encender",
    "videoSensing.onFlipped": "encendido al revés",
    "videoSensing.setVideoTransparency": "configurar transparencia de video a [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "escenario",
    "videoSensing.videoOn": "video [ATTRIBUTE] en [SUBJECT]",
    "videoSensing.videoToggle": "encender video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "cuando el movimiento del video sea > [REFERENCE]",
    "wedo2.getDistance": "distancia",
    "wedo2.getTiltAngle": "ángulo de inclinación [TILT_DIRECTION]",
    "wedo2.isTilted": "¿inclinado [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "en esa dirección",
    "wedo2.motorDirection.forward": "en esta dirección",
    "wedo2.motorDirection.reverse": "reversa",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "todos los motores",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "apagar [MOTOR_ID]",
    "wedo2.motorOn": "encender [MOTOR_ID]",
    "wedo2.motorOnFor": "encender [MOTOR_ID] por [DURATION] segundos",
    "wedo2.playNoteFor": "tocar nota [NOTE] por [DURATION] segundos",
    "wedo2.setLightHue": "configurar color de luz a [HUE]",
    "wedo2.setMotorDirection": "configurar dirección de [MOTOR_ID] a [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "configurar potencia de [MOTOR_ID] a [POWER]",
    "wedo2.tiltDirection.any": "cualquiera",
    "wedo2.tiltDirection.down": "abajo",
    "wedo2.tiltDirection.left": "izquierda",
    "wedo2.tiltDirection.right": "derecha",
    "wedo2.tiltDirection.up": "arriba",
    "wedo2.whenDistance": "cuando la distancia [OP] [REFERENCE]",
    "wedo2.whenTilted": "cuando se incline [TILT_DIRECTION_ANY]"
}